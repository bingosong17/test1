# NOTE: Generated By HttpRunner v3.1.3
"""
    概要：
        为订单派单，且使订单生效（只对订单中有一种商品生效，且供应商列表中第一个供应商可以满足供货，其他情况暂时未考虑）
    输入参数：
        "phone": 运营后台登陆账号
        "pass": 运营后台登陆密码
        "cityCode": 城市编号
        "orderNo": 订单号
    输出参数：
        无
    前置接口：
        无
"""

from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase
from yyht.订单中心.api.全部订单列表_test import TestCase全部订单列表 as 订单列表
from yyht.订单中心.api.人工待派单_系统待派单列表_test import TestCase人工待派单系统待派单列表 as 人工待派单系统待派单列表
from yyht.订单中心.api.人工拆单页面订单详情_test import TestCase人工拆单页面订单详情 as 人工拆单页面订单详情
from yyht.运营后台供应商api.api.查询库存_test import TestCase查询库存 as 查询库存
from yyht.订单中心.api.人工派单_test import TestCase人工派单 as 人工派单
from yyht.订单中心.api.获取品类订单类型_test import TestCase获取品类订单类型 as 获取品类订单类型
from yyht.订单中心.api.根据城市获取物流区域_test import TestCase根据城市获取物流区域 as 根据城市获取物流区域
from yyht.订单中心.api.标签查询_test import TestCase标签查询 as 标签查询
from yyht.订单中心.api.预派订单查询_test import TestCase预派订单查询 as 预派订单查询
from yyht.订单中心.api.订单派单生效_test import TestCase订单派单生效 as 订单派单生效



class TestCase派单(HttpRunner):

    config = Config("testcase description").verify(False).base_url("${testEnv($business)}").variables(
        **{
            "business": "",
            "session": "${getSession($business)}",
            "orderNo": "2020082614205314713539"
        })

    teststeps = [
        Step(
            RunTestCase("订单列表（可以不含）").call(订单列表).teardown_hook("${sleep_N_secs(1)}")
        ),
        Step(
            RunTestCase("人工待派单系统待派单列表（可以不含）").call(人工待派单系统待派单列表)
                .teardown_hook("${sleep_N_secs(1)}")
        ),
        Step(
            RunTestCase("人工拆单页面订单详情").call(人工拆单页面订单详情)
                .export(*["goodsId","goodsNum"])
                .teardown_hook("${sleep_N_secs(1)}")
        ),
        Step(
            RunTestCase("查询库存").call(查询库存)
                .export(*["supplierId","storageId","virtualStorageId"])
                .teardown_hook("${sleep_N_secs(1)}")
        ),
        Step(
            RunTestCase("人工派单").call(人工派单)
        ),
        Step(
            RunTestCase("获取品类订单类型（可以不含）").call(获取品类订单类型)
        ),
        Step(
            RunTestCase("根据城市获取物流区域（可以不含）").call(根据城市获取物流区域)
        ),
        Step(
            RunTestCase("标签查询（可以不含）").call(标签查询)
        ),
        Step(
            RunTestCase("预派订单查询（可以不含）").call(预派订单查询)
        ),
        Step(
            RunTestCase("订单派单生效").call(订单派单生效)
        ),
    ]


if __name__ == "__main__":
    TestCase派单().test_start()
