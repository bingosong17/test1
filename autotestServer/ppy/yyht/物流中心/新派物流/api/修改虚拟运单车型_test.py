# NOTE: Generated By HttpRunner v3.1.3
"""
    概要：
        根据车型查看司机信息，返回司机列表
    输入参数：
        "vehicleId": 车型ID,
        "virtualTransportationId": 虚拟运单ID,
        "driverId": 司机ID,
        "plannedStartTime": 计划配送时间
    输出参数：
        无
    前置接口：
        用户登陆
"""

from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCase修改虚拟运单车型(HttpRunner):

    config = Config("testcase description").verify(False).base_url("${testEnv($business)}").variables(
        **{
            "business": "",
            "session": "",
            "vehicleId": "12",
            "virtualTransportationId": "1139128741300791517",
            "driverId": 68,
            "plannedStartTime": "${hapentime(2)}"  #"2020-08-11 11:00",
        })

    teststeps = [
        Step(
            RunRequest("修改虚拟运单车型")
            .post(
                "/logis/mng/virtual/updateVirtualDistributeVehicle"
            )
            .with_headers(
                **{
                    "Connection": "keep-alive",
                    "Content-Length": "118",
                    "Accept": "application/json, text/plain, */*",
                    "key": "",
                    "sessionId": "$session",
                    "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36",
                    "Content-Type": "application/json",
                    "Sec-Fetch-Site": "same-site",
                    "Sec-Fetch-Mode": "cors",
                    "Sec-Fetch-Dest": "empty",
                    "Accept-Encoding": "gzip, deflate, br",
                    "Accept-Language": "zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7",
                }
            )
            .with_json(
                {
                    "vehicleId": "$vehicleId",
                    "virtualTransportationId": "$virtualTransportationId",
                    "driverId": "$driverId",
                    "plannedStartTime": "$plannedStartTime",
                }
            )
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.statusCode", 2000)
        ),
    ]


if __name__ == "__main__":
    TestCase修改虚拟运单车型().test_start()

"""
request:
{
	"vehicleId": "12",
	"virtualTransportationId": "1139128741300791517",
	"driverId": 68,
	"plannedStartTime": "2020-08-11 11:00"
}

response:
{
	"statusCode": 2000,
	"msg": null,
	"traceMsg": "traceId: 1597112866686",
	"timestamp": 1597112867,
	"signType": null,
	"sign": null,
	"body": true
}

"""