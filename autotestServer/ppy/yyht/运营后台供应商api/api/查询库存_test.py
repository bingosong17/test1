# NOTE: Generated By HttpRunner v3.1.3
"""
    概要：
        根据商品id查询库存
    输入参数：
        "goodsId": 商品id,
    输出参数：
        "supplierId":供应商id
        "storageId":仓库id
        "virtualStorageId":虚拟仓库id
    前置接口：
        无
"""


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCase查询库存(HttpRunner):

    config = Config("查询库存").verify(False).base_url("${testEnv($business)}").variables(
        **{
            "business": "",
            "session": "",
            "goodsId": 6565,
        }).export(*["supplierId","storageId","virtualStorageId"])

    teststeps = [
        Step(
            RunRequest("/alpha_t/ppy-supplier-mng-api/storage/queryStock")
            .post(
                "/ppy-supplier-mng-api/storage/queryStock"
            )
            .with_headers(
                **{
                    "Connection": "keep-alive",
                    "Content-Length": "74",
                    "sessionId": "$session",
                    "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36",
                    "systemCode": "yypp",
                    "Content-Type": "application/json",
                    "Accept": "*/*",
                    "Sec-Fetch-Site": "same-origin",
                    "Sec-Fetch-Mode": "cors",
                    "Sec-Fetch-Dest": "empty",
                    "Accept-Encoding": "gzip, deflate, br",
                    "Accept-Language": "zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7",
                }
            )
            .with_json(
                {
                    "goodsIds": ["$goodsId"],
                    "actualStockCheck": 1,  #查询实际可用库存大于0
                    "distributionStatus": 1,  #是否参与派单1是0否
                    "status": 1,  #是否有效1是0否
                }
            ).extract()
            .with_jmespath("body.body[0].supplierId","supplierId")
            .with_jmespath("body.body[0].pickupStorageId", "storageId")
            .with_jmespath("body.body[0].virtualStorageId", "virtualStorageId")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.statusCode", 2000)
        ),
    ]


if __name__ == "__main__":
    TestCase查询库存().test_start()
"""
request:
{
	"goodsIds": [6565],
	"actualStockCheck": 1,
	"distributionStatus": 1,
	"status": 1
}

response:
{
	"statusCode": 2000,
	"msg": null,
	"traceMsg": "traceId: 1598408578478",
	"timestamp": 1598408578,
	"signType": null,
	"sign": null,
	"body": [{
		"id": "9022",
		"supplierId": 9,
		"goodsId": 6565,
		"storageId": "58",
		"stock": 1932,
		"badStock": 0,
		"batchStock": 0,
		"lockStock": 40,
		"safeStock": 0,
		"actualStock": 1892,
		"price": 7300,
		"status": 1,
		"distributionStatus": 1,
		"version": 34,
		"updateTime": null,
		"createTime": null,
		"virtualStorageId": "259",
		"averageSale": 0,
		"safeDays": 3,
		"pickupStorageId": "58",
		"pickupPointName": "拼便宜供应链",
		"logisTra": "拼便宜-物流,北区-物流"
	}, {
		"id": "483814",
		"supplierId": 5434,
		"goodsId": 6565,
		"storageId": "4183",
		"stock": 186,
		"badStock": 0,
		"batchStock": 0,
		"lockStock": 0,
		"safeStock": 0,
		"actualStock": 186,
		"price": 7242,
		"status": 1,
		"distributionStatus": 1,
		"version": 57,
		"updateTime": null,
		"createTime": null,
		"virtualStorageId": "4390",
		"averageSale": 0,
		"safeDays": 3,
		"pickupStorageId": "6466",
		"pickupPointName": "厚待食品",
		"logisTra": "城东-物流,城南-物流,北区-物流"
	}]
}
"""