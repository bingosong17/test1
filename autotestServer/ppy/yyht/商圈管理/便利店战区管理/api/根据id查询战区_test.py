# NOTE: Generated By HttpRunner v3.1.4
"""
    概要：
        根据id查询战区
    输入参数：
        "regionId": 战队id
    输出参数：
        "regionPointsList": 战队范围坐标集
    前置接口：
        无
"""


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCase根据Id查询战区(HttpRunner):

    config = Config("根据Id查询战区").verify(False).base_url("${testEnv($business)}").variables(
        **{
            "business": "yyht",
            "session": "${getSession($business)}",
            "regionId": "498"
        }).export(*["regionPointsList"])

    teststeps = [
        Step(
            RunRequest("/test_t/pinpin/region/queryById")
            .post("/pinpin/region/queryById")
            .with_params(**{"regionId": "$regionId"})
            .with_headers(
                **{
                    "Connection": "keep-alive",
                    "Content-Length": "2",
                    "sessionId": "$session",
                    "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36",
                    "systemCode": "yypp",
                    "Content-Type": "application/json",
                    "Accept": "*/*",
                    "Sec-Fetch-Site": "same-origin",
                    "Sec-Fetch-Mode": "cors",
                    "Sec-Fetch-Dest": "empty",
                    "Accept-Encoding": "gzip, deflate, br",
                    "Accept-Language": "zh-CN,zh;q=0.9,zh-TW;q=0.8,en;q=0.7",
                }
            )
            .with_json({})
            .extract()
            .with_jmespath("body.body.regionPointsList","regionPointsList")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.statusCode", 2000)
        ),
    ]


if __name__ == "__main__":
    TestCase根据Id查询战区().test_start()
"""
response:
{
	"statusCode": 2000,
	"msg": null,
	"traceMsg": "traceId: null",
	"timestamp": 1602817142,
	"signType": null,
	"sign": null,
	"body": {
		"regionId": 498,
		"regionName": "aaaa",
		"regionArea": "7865306",
		"regionPointsList": [
			[119.363917, 30.15791],
			[119.400782, 30.143883],
			[119.357995, 30.120351]
		],
		"colour": "#3a91ec",
		"cityCode": "330100",
		"geoCityCode": "330100",
		"disable": false,
		"createTime": "2020-10-16 10:31:11",
		"updateTime": "2020-10-16 10:31:11",
		"principalId": 4,
		"businessLine": 0
	}
}
"""