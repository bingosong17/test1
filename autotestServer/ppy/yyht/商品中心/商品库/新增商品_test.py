# NOTE: Generated By HttpRunner v3.1.3
"""
    概要：
        无
    输入参数：
        无
    输出参数：
        无
    前置接口：
        无
"""


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase
import random
class TestCase新增商品(HttpRunner):
    config = Config("新增商品").verify(False).base_url("${testEnv($business)}").variables(
        **{
            "business": "yyht",
            "session": "${getSession($business)}",
            "barImageUrl": "",
            "barCode": random.randint(111111111111, 999999999999),
        }).export(*["statusCode"])

    teststeps = [
        Step(
            RunRequest("/alpha_t/ppy-op-api/goods/addGoods")
            .post("/ppy-op-api/goods/addGoods")
            .with_headers(
                **{
                    "Connection": "keep-alive",
                    "Content-Length": "945",
                    "sessionId": "$session",
                    "Sec-Fetch-Dest": "empty",
                    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36",
                    "systemCode": "yypp",
                    "Content-Type": "application/json",
                    "Accept": "*/*",
                    "Sec-Fetch-Site": "same-origin",
                    "Sec-Fetch-Mode": "cors",
                    "Accept-Encoding": "gzip, deflate, br",
                    "Accept-Language": "zh-CN,zh;q=0.9,en;q=0.8",
                }
            )
            .with_json(
                {
                    "specialty": "0",
                    "isImport": "0",
                    "single": 1,
                    "dan": 1,
                    "id": None,
                    "mainImages": [
                        "https://images.pinpianyi.com/images/library/2d268fbf1e85455d921b52fcd6a7034b.jpg"
                    ],
                    "detailImages": [
                        "https://images.pinpianyi.com/images/library/2d268fbf1e85455d921b52fcd6a7034b.jpg"
                    ],
                    "goodsPacknumUnit": "",
                    "goodsInsidePackUnit": "",
                    "goodsInsidePackNum": None,
                    "goodsPacknum": None,
                    "goodsCapacity": 1,
                    "theoryVolume": 1,
                    "weight": 1,
                    "scatteredPrice": 1,
                    "retailPrice": 1,
                    "guaranteePeriod": 1,
                    "brand": 4,
                    "brandId": 4,
                    "goodsCapacityUnit": "ml",
                    "goodsPacketUnit": "箱",
                    "specificationDesc": "就这么地",
                    "storageMethod": "1",
                    "gatherUserName": 3328,
                    "gatherUserId": 3328,
                    "guaranteePeriodUnit": "年",
                    "manufacturer": "1",
                    "backstageCategoryId": 377,
                    "logisticsPurchaseNum": 1,
                    "lwh": "1x1x1",
                    "name": "可口可乐就这么地1ml/箱",
                    "recycled": 0,
                    "barCode": {
                        "barCode": "$barCode",
                        "barImageUrl": "$barImageUrl",
                        "barStatus": 1,
                    },
                }
            ).extract()
            .with_jmespath("body.statusCode","statusCode")
            .validate()
            .assert_equal("status_code", 200)
            .assert_equal("body.statusCode", 2000)
            .assert_equal("body.body", "操作成功")
        ),
    ]


if __name__ == "__main__":
    TestCase新增商品().test_start()
